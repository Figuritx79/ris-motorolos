package mx.edu.utez.rismotorolos.doctor.service;

import mx.edu.utez.rismotorolos.doctor.model.Doctor;
import mx.edu.utez.rismotorolos.doctor.model.DoctorDto;
import org.springframework.stereotype.Service;

import java.util.ArrayList;
import java.util.List;
import java.util.Optional;

@Service
public class DoctorService {
    private final List<Doctor> doctors = new ArrayList<>();

    public Doctor createDoctor(DoctorDto doctorDto) {
        Doctor doctor = doctorDto.toEntity();
        doctors.add(doctor);
        return doctor;
    }


    public List<DoctorDto> getAllDoctors() {
        List<DoctorDto> doctorDtos = new ArrayList<>();
        for (Doctor doctor : doctors) {
            doctorDtos.add(DoctorDto.fromEntity(doctor));
        }
        return doctorDtos;
    }

    public Optional<DoctorDto> getDoctorById(Long id) {
        return doctors.stream()
                .filter(doctor -> doctor.getId().equals(id))
                .findFirst()
                .map(DoctorDto::fromEntity);
    }

    public Optional<Doctor> updateDoctor(Long id, DoctorDto doctorDto) {
        Optional<Doctor> doctorOptional = doctors.stream()
                .filter(doctor -> doctor.getId().equals(id))
                .findFirst();

        doctorOptional.ifPresent(doctor -> {
            doctor.setName(doctorDto.getName());
            doctor.setLast_name(doctorDto.getLast_name());
            doctor.setProfessional_id(doctorDto.getProfessional_id());
            doctor.setPhone_number(doctorDto.getPhone_number());
            doctor.setNurse(doctorDto.getNurse());
            doctor.setStock(doctorDto.getStock());
        });

        return doctorOptional;
    }

    public boolean deleteDoctor(Long id) {
        return doctors.removeIf(doctor -> doctor.getId().equals(id));
    }
}
